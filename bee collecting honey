//기존에 있던 뱀 게임에서 이미지를 추가해봤습니다.
//이미지로는 머리는 벌 / 꼬리는 꿀 / 먹이는 꽃
//배경으로는 봄 하늘로 설정했습니다.

//사용 할 함수 지정
let s;
let honey, bee, sky, flower;
let scl = 23;
let food;
playfield = 600;

//사용 할 이미지 불러오기
function preload(){
  honey = loadImage("https://raw.githubusercontent.com/HGJin/CGr/main/honey.png");
  bee = loadImage("https://raw.githubusercontent.com/HGJin/CGr/main/bee.png");
  sky = loadImage("https://raw.githubusercontent.com/HGJin/CGr/main/sky.png");
  flower = loadImage("https://raw.githubusercontent.com/HGJin/CGr/main/flower.png");
}
 
function setup() {
  createCanvas(playfield, 640); 
  background(sky);              
  s = new Snake();              
  frameRate (10);               //게임 속도 지정
  pickLocation();               
}


// p5js Draw function - required
function draw() {
  background(sky);                          
  scoreboard();                             
  if (s.eat(food)) {                        //음식 먹으면 재생성
    pickLocation();
  }
  s.death();
  s.update();
  s.show();
  fill (255,0,100);
  image(flower,food.x,food.y, scl, scl);   //음식 모형을 꽃으로 변경
}

// 음식 위치 지정
function pickLocation() {
  let cols = floor(playfield/scl);
  let rows = floor(playfield/scl);
  food = createVector(floor(random(cols)), floor(random(rows)));
  food.mult(scl);

  // 음식을 먹었는지 확인하기
  for (let i = 0; i < s.tail.length; i++) {
    let pos = s.tail[i];
    let d = dist(food.x, food.y, pos.x, pos.y);
    if (d < 1) {
      pickLocation();
    }
  }
}

// scoreboard 명령어 생성
function scoreboard() {
  fill(0);
  rect(0, 600, 600, 40);
  fill(255);
  textFont("Georgia");
  textSize(18);
  text("Score: ", 10, 625);
  text("Highscore: ", 450, 625)
  text(s.score, 70, 625);
  text(s.highscore, 540, 625)
}

// 캐릭터 움직이는 명령어
function keyPressed() {
  if (keyCode === UP_ARROW){
      s.dir(0, -1);
  }else if (keyCode === DOWN_ARROW) {
      s.dir(0, 1);
  }else if (keyCode === RIGHT_ARROW) {
      s.dir (1, 0);
  }else if (keyCode === LEFT_ARROW) {
      s.dir (-1, 0);
  }
}

 

// 머리에 대한 설정
function Snake() {
  this.x =0;
  this.y =0;
  this.xspeed = 1;
  this.yspeed = 0;
  this.total = 0;
  this.tail = [];
  this.score = 1;
  this.highscore = 1;

  this.dir = function(x,y) {
    this.xspeed = x;
    this.yspeed = y;
  }

 
  //스코어 변경
  this.eat = function(pos) {
    let d = dist(this.x, this.y, pos.x, pos.y);
    if (d < 1) {
      this.total++;
      this.score++;
      text(this.score, 70, 625);
      if (this.score > this.highscore) {
        this.highscore = this.score;
      }
      text(this.highscore, 540, 625);
      return true;
    } else {
      return false;
    }
  }

 
  //죽었을 경우
  this.death = function() {
    for (let i = 0; i < this.tail.length; i++) {
      let pos = this.tail[i];
      let d = dist(this.x, this.y, pos.x, pos.y);
      if (d < 1) {
        this.total = 0;
        this.score = 0;
        this.tail = [];
      }
    }
  }
  //음식을 먹었을 경우 꼬리 증가
  this.update = function(){
    if (this.total === this.tail.length) {
      for (let i = 0; i < this.tail.length-1; i++) {
        this.tail[i] = this.tail[i+1];
    }
    
    }
    this.tail[this.total-1] = createVector(this.x, this.y);
    this.x = this.x + this.xspeed*scl;
    this.y = this.y + this.yspeed*scl;
    this.x = constrain(this.x, 0, playfield-scl);
    this.y = constrain(this.y, 0, playfield-scl);
  }
  
  //꼬리의 이미지와 머리의 이미지를 설정
  this.show = function(){
    for (let i = 0; i < this.tail.length; i++) {
        image(honey,this.tail[i].x, this.tail[i].y, scl, scl);
    }
    image(bee,this.x, this.y, scl, scl);
  }
}
